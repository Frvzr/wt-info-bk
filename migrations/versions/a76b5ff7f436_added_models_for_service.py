"""added models for service

Revision ID: a76b5ff7f436
Revises: e0909b71f8fd
Create Date: 2025-03-31 19:30:18.979461

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a76b5ff7f436'
down_revision: Union[str, None] = 'e0909b71f8fd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('service_steps',
    sa.Column('service_id', sa.UUID(), nullable=False),
    sa.Column('step_id', sa.UUID(), nullable=False),
    sa.Column('answer', sa.String(length=300), nullable=True),
    sa.Column('technician', sa.String(length=32), nullable=True),
    sa.Column('completed_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['service_id'], ['service_equipment.id'], ),
    sa.ForeignKeyConstraint(['step_id'], ['checklist_steps.id'], ),
    sa.PrimaryKeyConstraint('service_id', 'step_id')
    )
    op.create_unique_constraint(None, 'checklist_steps', ['id'])
    op.create_unique_constraint(None, 'checklist_templates', ['id'])
    op.add_column('service_equipment', sa.Column('location', sa.UUID(), nullable=False))
    op.add_column('service_equipment', sa.Column('completed_technician', sa.String(length=32), nullable=False))
    op.add_column('service_equipment', sa.Column('completed_date', sa.DateTime(), nullable=True))
    op.create_unique_constraint(None, 'service_equipment', ['id'])
    op.drop_constraint('service_equipment_step_id_fkey', 'service_equipment', type_='foreignkey')
    op.create_foreign_key(None, 'service_equipment', 'location', ['location'], ['id'])
    op.drop_column('service_equipment', 'technician')
    op.drop_column('service_equipment', 'service_date')
    op.drop_column('service_equipment', 'step_id')
    op.drop_column('service_equipment', 'answer')
    op.create_unique_constraint(None, 'template_steps', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'template_steps', type_='unique')
    op.add_column('service_equipment', sa.Column('answer', sa.VARCHAR(length=300), autoincrement=False, nullable=False))
    op.add_column('service_equipment', sa.Column('step_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('service_equipment', sa.Column('service_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('service_equipment', sa.Column('technician', sa.VARCHAR(length=32), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'service_equipment', type_='foreignkey')
    op.create_foreign_key('service_equipment_step_id_fkey', 'service_equipment', 'checklist_steps', ['step_id'], ['id'])
    op.drop_constraint(None, 'service_equipment', type_='unique')
    op.drop_column('service_equipment', 'completed_date')
    op.drop_column('service_equipment', 'completed_technician')
    op.drop_column('service_equipment', 'location')
    op.drop_constraint(None, 'checklist_templates', type_='unique')
    op.drop_constraint(None, 'checklist_steps', type_='unique')
    op.drop_table('service_steps')
    # ### end Alembic commands ###
